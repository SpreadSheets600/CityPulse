"""Initial Migration

Revision ID: 524956c09e98
Revises:
Create Date: 2025-09-19 15:39:38.272750

"""

from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry

op.execute("CREATE EXTENSION IF NOT EXISTS postgis;")


# revision identifiers, used by Alembic.
revision = "524956c09e98"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "department",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("contact_email", sa.String(length=120), nullable=False),
        sa.Column("contact_phone", sa.String(length=15), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("contact_email"),
        sa.UniqueConstraint("contact_phone"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("firstname", sa.String(length=80), nullable=False),
        sa.Column("lastname", sa.String(length=80), nullable=False),
        sa.Column("address", sa.String(length=200), nullable=False),
        sa.Column("role", sa.Enum("citizen", "admin", name="userole"), nullable=False),
        sa.Column("phone", sa.String(length=15), nullable=False),
        sa.Column("email", sa.String(length=120), nullable=False),
        sa.Column("password_hash", sa.String(length=120), nullable=False),
        sa.Column("profile_picture", sa.String(length=200), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("firstname"),
        sa.UniqueConstraint("lastname"),
        sa.UniqueConstraint("phone"),
    )
    op.create_table(
        "issue",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("photo_url", sa.String(), nullable=True),
        sa.Column("voice_note_url", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "pending",
                "in_progress",
                "resolved",
                "rejected",
                "verified",
                name="issuestatus",
            ),
            nullable=False,
        ),
        sa.Column(
            "location",
            Geometry(geometry_type="POINT", srid=4326),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("citizen_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["citizen_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "verification_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("issue_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("pending", "verified", "rejected", name="verificationstatus"),
            nullable=False,
        ),
        sa.Column("verified_by", sa.Integer(), nullable=True),
        sa.Column("verified_at", sa.DateTime(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["issue_id"],
            ["issue.id"],
        ),
        sa.ForeignKeyConstraint(
            ["verified_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("verification_status")
    with op.batch_alter_table("issue", schema=None) as batch_op:
        batch_op.drop_index("idx_issue_location", postgresql_using="gist")

    op.drop_table("issue")
    op.drop_table("user")
    op.drop_table("department")
    # ### end Alembic commands ###
